!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
Disassembly	mpos-app.asm	/^Disassembly of section .text:$/;"	l
Disassembly	mpos-app2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	mpos-bootsector.asm	/^Disassembly of section .text:$/;"	l
Disassembly	mpos-kern.asm	/^Disassembly of section .text:$/;"	l
FLAG_PLUSPOSITIVE	mpos-app.asm	/^#define FLAG_PLUSPOSITIVE	(1<<4)$/;"	d
FLAG_PLUSPOSITIVE	mpos-app2.asm	/^#define FLAG_PLUSPOSITIVE	(1<<4)$/;"	d
FLAG_PLUSPOSITIVE	mpos-kern.asm	/^#define FLAG_PLUSPOSITIVE	(1<<4)$/;"	d
NUMBUFSIZ	mpos-app.asm	/^#define NUMBUFSIZ 20$/;"	d
NUMBUFSIZ	mpos-app2.asm	/^#define NUMBUFSIZ 20$/;"	d
NUMBUFSIZ	mpos-kern.asm	/^#define NUMBUFSIZ 20$/;"	d
color	mpos-app.asm	/^			color = va_arg(val, int);$/;"	d
color	mpos-app.asm	/^		color = 0x0700;$/;"	d
color	mpos-app.asm	/^		color = col[color % sizeof(col)] << 8;$/;"	d
color	mpos-app2.asm	/^			color = va_arg(val, int);$/;"	d
color	mpos-app2.asm	/^		color = 0x0700;$/;"	d
color	mpos-app2.asm	/^		color = col[color % sizeof(col)] << 8;$/;"	d
color	mpos-kern.asm	/^			color = va_arg(val, int);$/;"	d
counter	mpos-app2.asm	/^	counter = 0;$/;"	d
current	mpos-kern.asm	/^	current = &proc_array[1];$/;"	d
current	mpos-kern.asm	/^	current = proc;$/;"	d
cursor	mpos-app.asm	/^			cursor = console_putc(cursor, ' ', color);$/;"	d
cursor	mpos-app.asm	/^			cursor = console_putc(cursor, '0', color);$/;"	d
cursor	mpos-app.asm	/^			cursor = console_putc(cursor, *data, color);$/;"	d
cursor	mpos-app.asm	/^			cursor = console_putc(cursor, *format, color);$/;"	d
cursor	mpos-app.asm	/^			cursor = console_putc(cursor, negative, color);$/;"	d
cursor	mpos-app.asm	/^		cursor = CONSOLE_BEGIN;$/;"	d
cursor	mpos-app.asm	/^	cursor = console_vprintf(cursor, color, format, val);$/;"	d
cursor	mpos-app2.asm	/^			cursor = console_putc(cursor, ' ', color);$/;"	d
cursor	mpos-app2.asm	/^			cursor = console_putc(cursor, '0', color);$/;"	d
cursor	mpos-app2.asm	/^			cursor = console_putc(cursor, *data, color);$/;"	d
cursor	mpos-app2.asm	/^			cursor = console_putc(cursor, *format, color);$/;"	d
cursor	mpos-app2.asm	/^			cursor = console_putc(cursor, negative, color);$/;"	d
cursor	mpos-app2.asm	/^		cursor = CONSOLE_BEGIN;$/;"	d
cursor	mpos-app2.asm	/^	cursor = console_vprintf(cursor, color, format, val);$/;"	d
cursor	mpos-kern.asm	/^			cursor = console_putc(cursor, ' ', color);$/;"	d
cursor	mpos-kern.asm	/^			cursor = console_putc(cursor, '0', color);$/;"	d
cursor	mpos-kern.asm	/^			cursor = console_putc(cursor, *data, color);$/;"	d
cursor	mpos-kern.asm	/^			cursor = console_putc(cursor, *format, color);$/;"	d
cursor	mpos-kern.asm	/^			cursor = console_putc(cursor, negative, color);$/;"	d
cursor	mpos-kern.asm	/^		cursor = CONSOLE_BEGIN;$/;"	d
cursor	mpos-kern.asm	/^	cursor = console_vprintf(cursor, color, format, val);$/;"	d
cursorpos	mpos-app.asm	/^	cursorpos = console_vprintf(cursorpos, color, format, val);$/;"	d
cursorpos	mpos-app2.asm	/^	cursorpos = console_vprintf(cursorpos, color, format, val);$/;"	d
cursorpos	mpos-kern.asm	/^	cursorpos = (uint16_t *) 0xB8000;$/;"	d
cursorpos	mpos-kern.asm	/^	cursorpos = console_printf(cursorpos, 0x0700, "Type '1' to run mpos-app, or '2' to run mpos-app2.");$/;"	d
data	mpos-app.asm	/^			data = fill_numbuf(numbuf + NUMBUFSIZ, x > 0 ? x : -x, 10, upper_digits, precision);$/;"	d
data	mpos-app.asm	/^			data = fill_numbuf(numbuf + NUMBUFSIZ, x, 10, upper_digits, precision);$/;"	d
data	mpos-app.asm	/^			data = fill_numbuf(numbuf + NUMBUFSIZ, x, 16, lower_digits, precision);$/;"	d
data	mpos-app.asm	/^			data = fill_numbuf(numbuf + NUMBUFSIZ, x, 16, upper_digits, precision);$/;"	d
data	mpos-app.asm	/^			data = numbuf;$/;"	d
data	mpos-app.asm	/^			data = va_arg(val, char *);$/;"	d
data	mpos-app2.asm	/^			data = fill_numbuf(numbuf + NUMBUFSIZ, x > 0 ? x : -x, 10, upper_digits, precision);$/;"	d
data	mpos-app2.asm	/^			data = fill_numbuf(numbuf + NUMBUFSIZ, x, 10, upper_digits, precision);$/;"	d
data	mpos-app2.asm	/^			data = fill_numbuf(numbuf + NUMBUFSIZ, x, 16, lower_digits, precision);$/;"	d
data	mpos-app2.asm	/^			data = fill_numbuf(numbuf + NUMBUFSIZ, x, 16, upper_digits, precision);$/;"	d
data	mpos-app2.asm	/^			data = numbuf;$/;"	d
data	mpos-app2.asm	/^			data = va_arg(val, char *);$/;"	d
data	mpos-kern.asm	/^			data = fill_numbuf(numbuf + NUMBUFSIZ, x > 0 ? x : -x, 10, upper_digits, precision);$/;"	d
data	mpos-kern.asm	/^			data = fill_numbuf(numbuf + NUMBUFSIZ, x, 10, upper_digits, precision);$/;"	d
data	mpos-kern.asm	/^			data = fill_numbuf(numbuf + NUMBUFSIZ, x, 16, lower_digits, precision);$/;"	d
data	mpos-kern.asm	/^			data = fill_numbuf(numbuf + NUMBUFSIZ, x, 16, upper_digits, precision);$/;"	d
data	mpos-kern.asm	/^			data = numbuf;$/;"	d
data	mpos-kern.asm	/^			data = va_arg(val, char *);$/;"	d
data	mpos-kern.asm	/^	data = inb(KBDATAP);$/;"	d
default	mpos-app.asm	/^		default:$/;"	l
default	mpos-app2.asm	/^		default:$/;"	l
default	mpos-kern.asm	/^		default:$/;"	l
default_int_handler	mpos-kern.asm	/^default_int_handler:$/;"	l
done	mpos-app.asm	/^	done: ;$/;"	l
done	mpos-app2.asm	/^	done: ;$/;"	l
done	mpos-kern.asm	/^	done: ;$/;"	l
elf_header	mpos-kern.asm	/^	elf_header = (struct Elf *) ramimages[program_id].begin;$/;"	d
end_va	mpos-bootsector.asm	/^	end_va = va + filesz;$/;"	d
eph	mpos-bootsector.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
eph	mpos-kern.asm	/^	eph = ph + elf_header->e_phnum;$/;"	d
flags	mpos-app.asm	/^		flags = 0;$/;"	d
flags	mpos-app2.asm	/^		flags = 0;$/;"	d
flags	mpos-kern.asm	/^		flags = 0;$/;"	d
int	mpos-kern.asm	/^int$/;"	l
len	mpos-app.asm	/^			len = strlen(data);$/;"	d
len	mpos-app.asm	/^			len = strnlen(data, precision);$/;"	d
len	mpos-app2.asm	/^			len = strlen(data);$/;"	d
len	mpos-app2.asm	/^			len = strnlen(data, precision);$/;"	d
len	mpos-kern.asm	/^			len = strlen(data);$/;"	d
len	mpos-kern.asm	/^			len = strnlen(data, precision);$/;"	d
multiboot_start	mpos-kern.asm	/^multiboot_start:$/;"	l
negative	mpos-app.asm	/^				negative = 1;$/;"	d
negative	mpos-app.asm	/^			negative = ' ';$/;"	d
negative	mpos-app.asm	/^			negative = '+';$/;"	d
negative	mpos-app.asm	/^			negative = '-';$/;"	d
negative	mpos-app.asm	/^			negative = 0;$/;"	d
negative	mpos-app.asm	/^		negative = 0;$/;"	d
negative	mpos-app2.asm	/^				negative = 1;$/;"	d
negative	mpos-app2.asm	/^			negative = ' ';$/;"	d
negative	mpos-app2.asm	/^			negative = '+';$/;"	d
negative	mpos-app2.asm	/^			negative = '-';$/;"	d
negative	mpos-app2.asm	/^			negative = 0;$/;"	d
negative	mpos-app2.asm	/^		negative = 0;$/;"	d
negative	mpos-kern.asm	/^				negative = 1;$/;"	d
negative	mpos-kern.asm	/^			negative = ' ';$/;"	d
negative	mpos-kern.asm	/^			negative = '+';$/;"	d
negative	mpos-kern.asm	/^			negative = '-';$/;"	d
negative	mpos-kern.asm	/^			negative = 0;$/;"	d
negative	mpos-kern.asm	/^		negative = 0;$/;"	d
normal	mpos-app.asm	/^		normal:$/;"	l
normal	mpos-app2.asm	/^		normal:$/;"	l
normal	mpos-kern.asm	/^		normal:$/;"	l
numeric	mpos-app.asm	/^			numeric = 1;$/;"	d
numeric	mpos-app.asm	/^		numeric = 0;$/;"	d
numeric	mpos-app2.asm	/^			numeric = 1;$/;"	d
numeric	mpos-app2.asm	/^		numeric = 0;$/;"	d
numeric	mpos-kern.asm	/^			numeric = 1;$/;"	d
numeric	mpos-kern.asm	/^		numeric = 0;$/;"	d
p	mpos-app.asm	/^	p = sys_fork();$/;"	d
p	mpos-app2.asm	/^			p = sys_fork();$/;"	d
ph	mpos-bootsector.asm	/^	ph = (struct Proghdr*) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
ph	mpos-kern.asm	/^	ph = (struct Proghdr*) ((const uint8_t *) elf_header + elf_header->e_phoff);$/;"	d
pid	mpos-kern.asm	/^		pid = (pid + 1) % NPROCS;$/;"	d
precision	mpos-app.asm	/^					precision = 10 * precision + *format++ - '0';$/;"	d
precision	mpos-app.asm	/^				precision = 0;$/;"	d
precision	mpos-app.asm	/^				precision = va_arg(val, int);$/;"	d
precision	mpos-app.asm	/^		precision = -1;$/;"	d
precision	mpos-app2.asm	/^					precision = 10 * precision + *format++ - '0';$/;"	d
precision	mpos-app2.asm	/^				precision = 0;$/;"	d
precision	mpos-app2.asm	/^				precision = va_arg(val, int);$/;"	d
precision	mpos-app2.asm	/^		precision = -1;$/;"	d
precision	mpos-kern.asm	/^					precision = 10 * precision + *format++ - '0';$/;"	d
precision	mpos-kern.asm	/^				precision = 0;$/;"	d
precision	mpos-kern.asm	/^				precision = va_arg(val, int);$/;"	d
precision	mpos-kern.asm	/^		precision = -1;$/;"	d
protcseg	mpos-bootsector.asm	/^protcseg:	movw	$SEGSEL_BOOT_DATA, %ax	# Our data segment selector$/;"	l
real_to_prot	mpos-bootsector.asm	/^real_to_prot:	cli			# Don't allow interrupts: mandatory,$/;"	l
size_t	mpos-app.asm	/^size_t$/;"	l
size_t	mpos-app2.asm	/^size_t$/;"	l
size_t	mpos-kern.asm	/^size_t$/;"	l
spinloop	mpos-bootsector.asm	/^spinloop:	jmp spinloop		# ..but in case it does, spin.$/;"	l
start	mpos-bootsector.asm	/^start:		.code16				# This runs in real mode$/;"	l
static	mpos-app.asm	/^static char *$/;"	l
static	mpos-app.asm	/^static const char flag_chars[] = "#0- +";$/;"	l
static	mpos-app.asm	/^static const char lower_digits[] = "0123456789abcdef";$/;"	l
static	mpos-app.asm	/^static inline int$/;"	l
static	mpos-app.asm	/^static inline void$/;"	l
static	mpos-app.asm	/^static uint16_t *$/;"	l
static	mpos-app.asm	/^static void app_printf(const char *format, ...) __attribute__((noinline));$/;"	l
static	mpos-app.asm	/^static void$/;"	l
static	mpos-app2.asm	/^static char *$/;"	l
static	mpos-app2.asm	/^static const char flag_chars[] = "#0- +";$/;"	l
static	mpos-app2.asm	/^static const char lower_digits[] = "0123456789abcdef";$/;"	l
static	mpos-app2.asm	/^static inline int$/;"	l
static	mpos-app2.asm	/^static uint16_t *$/;"	l
static	mpos-app2.asm	/^static void app_printf(const char *format, ...) __attribute__((noinline));$/;"	l
static	mpos-app2.asm	/^static void$/;"	l
static	mpos-bootsector.asm	/^static inline uint8_t$/;"	l
static	mpos-bootsector.asm	/^static inline void$/;"	l
static	mpos-kern.asm	/^static char *$/;"	l
static	mpos-kern.asm	/^static const char flag_chars[] = "#0- +";$/;"	l
static	mpos-kern.asm	/^static const char lower_digits[] = "0123456789abcdef";$/;"	l
static	mpos-kern.asm	/^static inline uint8_t$/;"	l
static	mpos-kern.asm	/^static inline void$/;"	l
static	mpos-kern.asm	/^static pid_t do_fork(process_t *parent);$/;"	l
static	mpos-kern.asm	/^static uint16_t *$/;"	l
static	mpos-kern.asm	/^static void loader_panic(void);$/;"	l
static	mpos-kern.asm	/^static void$/;"	l
status	mpos-app.asm	/^			status = sys_wait(p);$/;"	d
sys_int48_handler	mpos-kern.asm	/^sys_int48_handler:$/;"	l
sys_int49_handler	mpos-kern.asm	/^sys_int49_handler:$/;"	l
sys_int50_handler	mpos-kern.asm	/^sys_int50_handler:$/;"	l
sys_int51_handler	mpos-kern.asm	/^sys_int51_handler:$/;"	l
sys_int52_handler	mpos-kern.asm	/^sys_int52_handler:$/;"	l
sys_int53_handler	mpos-kern.asm	/^sys_int53_handler:$/;"	l
sys_int54_handler	mpos-kern.asm	/^sys_int54_handler:$/;"	l
sys_int55_handler	mpos-kern.asm	/^sys_int55_handler:$/;"	l
sys_int56_handler	mpos-kern.asm	/^sys_int56_handler:$/;"	l
sys_int57_handler	mpos-kern.asm	/^sys_int57_handler:$/;"	l
uint16_t	mpos-app.asm	/^uint16_t *$/;"	l
uint16_t	mpos-app2.asm	/^uint16_t *$/;"	l
uint16_t	mpos-kern.asm	/^uint16_t *$/;"	l
void	mpos-app.asm	/^void *$/;"	l
void	mpos-app.asm	/^void run_child(void);$/;"	l
void	mpos-app.asm	/^void$/;"	l
void	mpos-app2.asm	/^void *$/;"	l
void	mpos-app2.asm	/^void run_child(void);$/;"	l
void	mpos-app2.asm	/^void$/;"	l
void	mpos-bootsector.asm	/^void readsect(void *addr, uint32_t sect);$/;"	l
void	mpos-bootsector.asm	/^void readseg(uint32_t va, uint32_t filesz, uint32_t memsz, uint32_t sect);$/;"	l
void	mpos-bootsector.asm	/^void$/;"	l
void	mpos-kern.asm	/^void *$/;"	l
void	mpos-kern.asm	/^void$/;"	l
whichprocess	mpos-kern.asm	/^		whichprocess = console_read_digit();$/;"	d
width	mpos-app.asm	/^				width = 10 * width + *format++ - '0';$/;"	d
width	mpos-app.asm	/^			width = va_arg(val, int);$/;"	d
width	mpos-app.asm	/^		width = -1;$/;"	d
width	mpos-app2.asm	/^				width = 10 * width + *format++ - '0';$/;"	d
width	mpos-app2.asm	/^			width = va_arg(val, int);$/;"	d
width	mpos-app2.asm	/^		width = -1;$/;"	d
width	mpos-kern.asm	/^				width = 10 * width + *format++ - '0';$/;"	d
width	mpos-kern.asm	/^			width = va_arg(val, int);$/;"	d
width	mpos-kern.asm	/^		width = -1;$/;"	d
zeros	mpos-app.asm	/^			zeros = 0;$/;"	d
zeros	mpos-app.asm	/^			zeros = precision - len;$/;"	d
zeros	mpos-app.asm	/^			zeros = width - len - !!negative;$/;"	d
zeros	mpos-app2.asm	/^			zeros = 0;$/;"	d
zeros	mpos-app2.asm	/^			zeros = precision - len;$/;"	d
zeros	mpos-app2.asm	/^			zeros = width - len - !!negative;$/;"	d
zeros	mpos-kern.asm	/^			zeros = 0;$/;"	d
zeros	mpos-kern.asm	/^			zeros = precision - len;$/;"	d
zeros	mpos-kern.asm	/^			zeros = width - len - !!negative;$/;"	d
